name: "Charts: Lint and test"

on:
  pull_request:
    paths:
    - 'charts/**'
    - '!charts/**/README.md'
    - '!charts/**/README.md.gotmpl'
    - '!charts/**/README_CHANGELOG.md.gotmpl'
    - '!charts/**/README_CONFIG.md.gotmpl'

jobs:
  changes:
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    name: Get changes
    runs-on: ubuntu-20.04
    outputs:
      matrix: |
        {
          "lint": ${{ steps.list-changed.outputs.charts_lint }},
          "install": ${{ steps.list-changed.outputs.charts_install }},
        }
      lint: ${{ steps.list-changed.outputs.detected }}
      install: ${{ steps.list-changed.outputs.detected }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.0.1

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        CHARTS_LINT=$(ct list-changed --config .github/ct-lint.yaml)
        CHARTS_LINT_JSON=$(echo "${CHARTS_LINT}" | jq -R -s -c 'split("\n")[:-1]')
        echo ::set-output name=charts_lint::${CHARTS_LINT_JSON}
        if [[ -n "${CHARTS_LINT}" ]]; then
          echo "::set-output name=lint::true"
        fi

        CHARTS_INSTALL=$(ct list-changed --config .github/ct-insall.yaml)
        CHARTS_INSTALL_JSON=$(echo "${CHARTS_INSTALL}" | jq -R -s -c 'split("\n")[:-1]')
        echo ::set-output name=charts_install::${CHARTS_TEST_JSON}
        if [[ -n "${CHARTS_INSTALL}" ]]; then
          echo "::set-output name=install::true"
        fi

  lint:
    needs:
    - changes
    if: |
      !contains(github.event.head_commit.message, '[ci-skip]')
      &&
      needs.changes.outputs.lint == 'true'
    name: Lint charts
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      fail-fast: true
      max-parallel: 10
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.5.3

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.0.1

    - name: Run chart-testing (lint)
      id: lint
      run: ct lint --config .github/ct-lint.yaml --charts ${{ matrix.lint }}

  # unittest:
  #   if: "!contains(github.event.head_commit.message, '[ci-skip]')"
  #   runs-on: ubuntu-20.04
  #   needs: lint
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Install Dev tools
  #     run: sudo apt-get update && sudo apt-get install -y jq libjq-dev

  #   - name: Install Helm
  #     uses: azure/setup-helm@v1
  #     with:
  #       version: v3.5.3

  #   - name: Install Ruby
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: 2.7

  #   - name: Install dependencies
  #     env:
  #       RUBYJQ_USE_SYSTEM_LIBRARIES: 1
  #     run: |
  #       bundle install

  #   - name: Run tests
  #     run: |
  #       bundle exec m -r test/charts

  install:
    needs:
    - changes
    - lint
    if: |
      !contains(github.event.head_commit.message, '[ci-skip]')
      &&
      needs.changes.outputs.install == 'true'
    name: Install charts
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      fail-fast: true
      max-parallel: 10
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.5.3

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.0.1

    - name: Create k3d cluster
      uses: nolar/setup-k3d-k3s@v1
      with:
        version: v1.19

    - name: Run chart-testing (install)
      run: ct install --config .github/ct-install.yaml --charts ${{ matrix.install }}
